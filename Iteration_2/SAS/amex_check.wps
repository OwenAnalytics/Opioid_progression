** Opioid Predictive Model for American Express        **;
** Data Prep for Python                                **;
** Service Dates: 7.1.15-12.31.2017                    **;
** trvlapp3131: /home/ace/AMEX_2018/SAS/amex.sas       **;
** N. Ridenour 07.23.18, modified by Yuchen Li         **;
**  08/15/2018, in process of being checked            **;

*libname amex '/ace/u071416/amex_2018/data';
libname amex "C:\Users\U0133708\Downloads\amex_data";
*libname library '/ace/u071416/amex_2018/sas/library';
libname library "C:\Users\U0133708\Downloads\amex_data";

%let elig_loc = C:\Users\U0133708\Downloads\amex_data\amex_opioid_elig_1212278.csv;
%let claims_loc = C:\Users\U0133708\Downloads\amex_data\amex_opioid_claims_1212277_with_GENERID.csv ;
%let opioid_val_sets_loc = C:\Users\U0133708\Downloads\amex_data\opioid_value_sets_2017.csv;
%let output_dir = C:\Users\U0133708\Downloads\amex_data\; *include the slash at the end!!!;


%let hedis_yr = 2017;


proc format;
  value bi 0  = '0'
           .  = 'MD'
        other = '1';
  value ten_pct  0-.10499 = '0-10%'
                .105-.20499 = '11-20%'
				.205-.30499 = '21-30%'
				.305-.40499 = '31-40%'
				.405-.50499 = '41-50%'
				.505-.60499 = '51-60%'
				.605-.70499 = '61-70%'
				.705-.80499 = '71-80%'
				.805-.90499 = '81-90%'
				.905-1.0499 = '91-100%'
				1.05-999 = '>100%';
  value days 1-3  = '1-3'
             4-7  = '4-7'
			 8-13 = '8-13'
			 14-300 = '14+';
  value vol 1-5 		 = '1-5'
            6-10 		 = '6-10'
            11-20 		 = '11-20'
			21-30 		 = '21-30'
			31-40 		 = '31-40'
			41-50 		 = '41-50'
			51-60 		 = '51-60'
			61-70 		 = '61-70'
			71-80 		 = '71-80'
			81-90 		 = '81-90'
			91-100 		 = '91-100'
			101-200      = '101-200'
            201-140000   = '201+';
  value ratio 0-0.05499     = '0-5%'
              0.055-0.09499 = '6-9%'
			  0.095-0.19499 = '10-19%'
			  0.195-0.29499 = '20-29%'
			  0.295-0.39499 = '30-39%'
			  0.395-0.49499 = '40-49%'
			  0.495-1       = '50-100%';
  value mpr_fmt 0-1.249 = '0-125%'
                1.25-60 = '>125%';
run;

*** Value Sets ***;
** ICD9 **;
* SUD - non-opioid *;
%let sud9 = ('2910' ,'2911' ,'2912', '2913' ,'2914' ,'2915' ,'29181','29182','29189','2919', '30300','30301','30302','30390',
			 '30391','30392','30410','30411','30412','30420','30421','30422','30430','30431','30432','30440','30441','30442',
			 '30450','30451','30452','30460','30461','30462','30480','30481','30482','30490','30491','30492','30500','30501',
			 '30502','30520','30521','30522','30530','30531','30532','30540','30541','30542','30550','30551','30552','30560',
			 '30561','30562','30570','30571','30572','30580','30581','30582','30590','30591','30592','53530','53531','5711');

* OUD *;
%let oud9 = ('30400','30401','30402','30470','30471','30472','30550','30551','30552');

* OUD-remission *;
%let oudr9 = ('30403','30473');

* Adverse affects *;
%let adv9 = ('E9352');

* Overdose *;
%let od9 = ('96500','96501','96509','E8500','E8501','E8502','E9500','E9620','E9800');

* Neonatal Abstinence Syndrome *;
%let nas9 = ('7795');
%let nas_mom9 = ('76072');

** ICD10 **;
* SUD - non-opioiod *;
%let sud10 = 
('F1010' ,'F10120','F10121','F10129','F1014' ,'F10150','F10151','F10159','F10180','F10181','F10182','F10188','F1019' ,
 'F1020' ,'F10220','F10221' ,'F10229','F10230','F10231','F10232','F10239','F1024' ,'F10250','F10251','F10259','F1026' ,
 'F1027' ,'F10280','F10281','F10282','F10288','F1029' ,'F1120' ,'F1210' ,'F12120','F12121','F12122','F12129','F12150',
 'F12151','F12159','F12180','F12188','F1219' ,'F1220' ,'F12220','F12221','F12222','F12229','F12250','F12251','F12259',
 'F12280','F12288','F1229' ,'F1310' ,'F13120','F13121','F13129','F1314' ,'F13150','F13151','F13159','F13180','F13181',
 'F13182','F13188','F1319' ,'F1320' ,'F13220','F13221','F13229','F13230','F13231','F13232','F13239','F1324' ,'F13250',
 'F13251','F13259','F1326' ,'F1327' ,'F13280','F13281','F13282','F13288','F1329' ,'F1410' ,'F14120','F14121','F14122',
 'F14129','F1414' ,'F14150','F14151','F14159','F14180','F14181','F14182','F14188','F1419' ,'F1420' ,'F14220','F14221',
 'F14222','F14229','F1423' ,'F1424' ,'F14250','F14251','F14259','F14280','F14281','F14282','F14288','F1429' ,'F1510' ,
 'F15120','F15121','F15122','F15129','F1514' ,'F15150','F15151','F15159','F15180','F15181','F15182','F15188','F1519' ,
 'F1520' ,'F15220','F15221','F15222','F15229','F1523' ,'F1524' ,'F15250','F15251','F15259','F15280','F15281','F15282',
 'F15288','F1529' ,'F1610' ,'F16120','F16121','F16122','F16129','F1614' ,'F16150','F16151','F16159','F16180','F16183',
 'F16188','F1619' ,'F1620' ,'F16220','F16221','F16229','F1624' ,'F16250','F16251','F16259','F16280','F16283','F16288',
 'F1629' ,'F1810' ,'F18120','F18121','F18129','F1814' ,'F18150','F18151','F18159','F1817' ,'F18180','F18188','F1819' ,
 'F1820' ,'F18220','F18221','F18229','F1824' ,'F18250','F18251','F18259','F1827' ,'F18280','F18288','F1829' ,'F1910' ,
 'F19120','F19121','F19122','F19129','F1914' ,'F19150','F19151','F19159','F1916' ,'F1917' ,'F19180','F19181','F19182',
 'F19188','F1919' ,'F1920' ,'F19220','F19221','F19222','F19229','F19230','F19231','F19232','F19239','F1924' ,'F19250',
 'F19251','F19259','F1926' ,'F1927' ,'F19280','F19281','F19282','F19288','F1929');

* OUD *;
%let oud10 = 
('F1120' ,'F11220','F11221','F11222','F11229','F1123','F1124' ,'F11250','F11251','F11259','F11281','F11282','F11288',
 'F1129' ,'F1110' ,'F11120','F11121','F11122','F11129','F1114','F11150','F11151','F11159','F11181','F11182','F11188',
 'F1119' ,'F1190' ,'F11920','F11929','F11921','F11922','F1193','F1194' ,'F11950','F11951','F11959','F11981','F11982',
 'F11988','F1199' );

* Overdose *;
%let od10 = ('T400X1A','T400X1D','T400X1S','T400X2A','T400X2D','T400X2S','T400X3A','T400X3D','T400X3S','T400X4A','T400X4D',
			 'T400X4S','T401X1A','T401X1D','T401X1S','T401X2A','T401X2D','T401X2S','T401X3A','T401X3D','T401X3S','T401X4A',
			 'T401X4D','T401X4S','T402X1A','T402X1D','T402X1S','T402X2A','T402X2D','T402X2S','T402X3A','T402X3D','T402X3S',
			 'T402X4A','T402X4D','T402X4S');

* Remission *;
%let oudr10 = ('F1121');

* Adverse Effects *;
%let adv10 = ('T400X5A','T400X5D','T400X5S','T402X5A','T402X5D','T402X5S');

* Underdosing *;
%let ud10 = ('T400X6A','T400X6D','T400X6S','T402X6A','T402X6D','T402X6S');

* Neonatal Abstinence Syndrome *;
%let nas10 = ('P961','P962');
%let nas_mom10=('P0449');

** CPT/HCPCS **;
* Hospice *; 
%let excl_hospice_c = 
('99377','99378','G0182','G9473','G9474','G9475','G9476','G9477','G9478','G9479','Q5003','Q5004','Q5005',
 'Q5006','Q5007','Q5008','Q5010','S9126','T2042','T2043','T2044','T2045','T2046');

** Revenue **;
* Hospice *; 
%let excl_hospice_r = 
('0115','0125','0135','0145','0155','0235','0620','0651','0652','0655','0656','0657','0658','0659','0810',
 '0811','0812','0813','0814','0815','0817','0818','0891','081A','081B','081C','081D','081E','081F','081G',
 '081H','081I','081J','081K','081M','081O','081X','081Y','081Z','0820','0821','0822','0823','0824','0825',
 '0827','0828','0829','082A','082B','082C','082D','082E','082F','082G','082H','082I','082J','082K','082M',
 '082O','082X','082Y','082Z') ;

 ** Rx **;
 * Morphine *;
 %let morph = ('J2270','J2271','J2275','S0093','Q9974');

 * Treatment Rx *;
 %let trt_rx = ('J0571','J0592','J0570','J0572','J0573','J0574','J0575','J0592','J2310');

 * Treatment Px *;
 %let trt_px = ('HZ81ZZZ','HZ82ZZZ','HZ84ZZZ','HZ85ZZZ','HZ86ZZZ','HZ91ZZZ','HZ92ZZZ','HZ94ZZZ','HZ95ZZZ','HZ96ZZZ');

 ** DxCats **;
 * Cancer: malignant neoplasms *;
 %let ca_dxcat = ('CVS81','DEN05','DEN06','DEN07','DEN08','END14','END15','END81','ENT13','ENT14','ENT15','ENT16','ENT17','EYE25','EYE26','EYE81','GIS27',
   				  'GIS28','GIS29','GIS30','GIS83','GUS05','GUS06','GUS81','GYN19','GYN20','GYN21','GYN22','GYN23','GYN24','GYN25','GYN81','HEM13','HEM14',
				  'HEM15','HEM16','HEM17','HEM18','HEM19','HEM20','HEM21','HEM22','HEM23','HEM24','HEM25','HEM26','HEM27','HEM28','HEM29','HEM30','HEM31',
				  'HEM32','HEM33','HEM34','HEM35','HEM37','HEM82','HEM83','HEM84','HEP11','HEP82','MGS04','MGS05','MGS06','MGS07','MUS33','OTH90','OTH91',
				  'RES13','RES82','SKN06','SKN07','SKN08','SKN81');

%let mh_dxc = ('PSY01','PSY02','PSY03','PSY04','PSY13','PSY14','PSY15','PSY16','PSY80','PSY81','PSY82','PSY83');


** Import raw data **;
* Eligibility - looks like 1 record per member per mo *;
data amex.elig;
  infile "&elig_loc." delimiter = ',' missover dsd firstobs = 2 lrecl = 400;
  informat 'elig_start_dt'n MMDDYY10.;
  format 'elig_start_dt'n mmddyy10. enrolid $20. elig_start_dt business_unit_cd plan_cd $20. mdst_plan_model_cd $30. family_id $15. plan $75. table $12.;
  input year $ enrolid $ employer_cd $ elig_start_dt $ sex $ mdst_age_grp_cd $ age_years zip_cd $ state_cd $ msa_cd $ 
		years_svc salary_ind $ union_worker_ind $ business_unit_cd $ mdst_plan_model_cd $ mdst_plan_model $ family_id $ mdst_relation_cd $ 
		medical_covg_ind $ drug_covg_ind $ dental_covg_ind $ plan_cd $ plan $ table $;  
run;

* Claims: Medical/Pharmacy *;
* Note: Rx does not have generid which is how we classify Rx *;
data amex.claims;
  infile "&claims_loc." dlm = ',' missover dsd firstobs = 2 lrecl = 700;
  informat 'svcdate'n 'tsvcdat'n 'paiddt'n MMDDYY10.;
  format 'svcdate'n 'tsvcdat'n 'paiddt'n MMDDYY10. enrolid $20. claim_id mdst_prov_type $30. ndcnum $11. dtl_ther_class_cd npi $10.
		 prov_id $25. prov_name std_hosp ord_prov_name $70. prov_id $25. epi_id $30. adm_id $16. mdst_place_grp_cd table $12.;
  input year_paid $ enrolid $ employer_cd $ claim_id $ line_nbr svcdate tsvcdat dstatus $ cap_svc_ind $ paiddt
  		pay chg netpay paid_in_ntwk_ind $ ntwk_prov_ind $ out_of_pocket coins copay deduct proc1 $
		proc_system_cd $ proc_cat_cd $ procgrp $ dxcat $ clincond $ dx1 $ dx2 $ dx3 $ dx4 $
		dx5 $ dx6 $ dx7 $ dx8 $ dx9 $ dx10 $ dxver $ drg $ svcscat $ mdst_svc_subcat_cd $
		mdc $ ndcnum $ dtl_ther_class_cd $ int_ther_class_cd stdplac $ prov_id $ mdst_prov_type $ stdprov $ npi $
		prov_name $ std_hosp $ ord_prov $ ord_prov_name $ daysupp rx_refill_nbr compound_cd $ epi_id $ adm_id $ revcode $ 
		rb_flag $ mdst_place_grp_cd $ table $ generid $;
 run; 

 * Not using this yet *;
/* Admissions *; 
 data amex.adm;
   infile  "/ace/AMEX_2018/Data/amex_opioid_admit_1212284.csv" dlm = ',' missover dsd firstobs = 2 lrecl = 120;
   informat 'ADMDATE'n 'PDDATE'n MMDDYY10.;
   format 'ADMDATE'n 'PDDATE'n MMDDYY10. enrolid $20. adm_id $16. table $12.;
   input year $ enrolid $ employer_cd $ adm_id $ admdate pddate svcdate proc1 $ drg $ pdx $ dxver $ totchg totpay totnetpay los table $;
run;

* MEG *;
data amex.meg;
  infile  "/ace/AMEX_2018/Data/amex_opioid_epis_1212285.csv" dlm = ',' missover dsd firstobs = 2 lrecl = 200;
  informat 'SVCDATE'n 'TSVCDAT'n MMDDYY10.;
  format 'SVCDATE'n 'TSVCDAT'n MMDDYY10. enrolid $20. epi_id $16.mng_phys_type mdst_phys_type $30. prov_id $13. table $12.;
  input year enrolid $ employer_cd $ epi_id $ epi_adm_cnt epi_rx_cnt svcdate tsvcdat epi_days_cnt epi_grp_cd $ epi_incomplete_ind $
  		epi_proc_type_cd $ epi_disease_stg_cd $ epi_pay epi_submit epi_netpay epi_op_pay epi_op_submit epi_op_netpay epi_rx_pay
		epi_rx_submit epi_rx_netpay epi_tot_pay epi_tot_submit epi_tot_netpay prov_id $ mng_phys_type $ mng_phys_type_cd $ prov_id $
		mdst_phys_type $ stdprov $ table $;
run;
*/

** QA **;
* Eligibility *;
proc freq data= amex.elig;
  title 'Am Ex: Eligibility';
  tables year employer_cd elig_start_dt sex mdst_age_grp_cd zip_cd state_cd msa_cd salary_ind union_worker_ind business_unit_cd 
         mdst_plan_model_cd mdst_plan_model mdst_relation_cd medical_covg_ind drug_covg_ind dental_covg_ind plan_cd plan table / missprint;
run;
proc means data=amex.elig;
  var age_years years_svc;
run;

* Claims *;
proc freq data= amex.claims;
  title 'Am Ex: Claims - Med/Rx';
  tables year_paid employer_cd svcdate dstatus cap_svc_ind paid_in_ntwk_ind ntwk_prov_ind proc1 proc_system_cd proc_cat_cd procgrp 
         dxcat clincond dx1 dxver drg svcscat mdst_svc_subcat_cd mdc dtl_ther_class_cd int_ther_class_cd stdplac mdst_prov_type
         stdprov std_hosp revcode rb_flag mdst_place_grp_cd table / missprint;
run;
proc means data=amex.claims;
  var pay chg netpay coins copay deduct daysupp;
run;

/* Admissions *;
proc freq data= amex.adm;
  title 'Am Ex: Admissions';
  tables year employer_cd admdate svcdate proc1 drg pdx dxver table / missprint;
run;
proc means data=amex.adm;
  var totchg totpay totnetpay los;
run;

* Admissions *;
proc freq data= amex.meg;
  title 'Am Ex: MEG';
  tables year employer_cd svcdate epi_grp_cd epi_incomplete_ind epi_proc_type_cd epi_disease_stg_cd mng_phys_type mng_phys_type_cd 
         mdst_phys_type stdprov table / missprint;
run;
proc means data=amex.mge;
  var epi_adm_cnt epi_rx_cnt epi_days_cnt epi_pay epi_submit epi_netpay epi_op_pay epi_op_submit epi_op_netpay epi_rx_pay
      epi_rx_submit epi_rx_netpay epi_tot_pay epi_tot_submit epi_tot_netpay;
run;
*/    

** Value Sets from file **;
* Cancer, Mental Health dx, Rx *;
data library.opioid_vs_&hedis_yr;
  infile "&opioid_val_sets_loc." dlm = ',' missover dsd firstobs = 2;
  length msre_name $50 type_of_code short_name $20;
  input msre_name $ type_of_code $ Code $ short_name $;
  if type_of_code = 'generid' then fmtname = trim(short_name) || '_' || type_of_code;
    else                           fmtname = '$' || trim(short_name) || '_' || type_of_code;
  label = trim(short_name) || '_' || type_of_code;
  dx = code;
run;

proc freq data=library.opioid_vs_&hedis_yr; tables fmtname / missprint; run;
proc sort data=library.opioid_vs_&hedis_yr out = dx nodupkey; by fmtname dx; run;
proc format library=library cntlin=dx(where = (start ne '') rename=(dx=start)); run;
proc sort data=library.opioid_vs_&hedis_yr (where = (type_of_code = 'generid')) out = rx nodupkey; by fmtname code; run;
proc format library=library cntlin=rx(where = (start ne '') rename=(code=start)); run;

* Create eligibility files *;
* Restrict to at least 11 months of enrollment per year and age at MPSD of CY14 of 12 yrs old *;
proc sort data=amex.elig out = amex.elig_trim (keep = enrolid year elig_start_dt employer_cd sex age_years zip_cd state_cd msa_cd years_svc salary_ind
    union_worker_ind business_unit_cd mdst_plan_model_cd mdst_plan_model family_id mdst_relation_cd medical_covg_ind drug_covg_ind dental_covg_ind 
    plan_cd plan); 
  by enrolid elig_start_dt;
run;

data amex.elig_trim (drop = year elig_start_dt);
  set amex.elig_trim;
  by enrolid elig_start_dt;
  * Count months enrolled by year *;
  retain enrmon15 enrmon16 enrmon17 0;
  if first.enrolid then do;
    enrmon15 = 0;
	enrmon16 = 0;
	enrmon17 = 0;
  end;

       if year = 2015 then enrmon15 + 1;
  else if year = 2016 then enrmon16 + 1;
  else if year = 2017 then enrmon17 + 1;

  * Output 1 record per person *;
  * Keeps most recent age, sex, etc. *;
  if last.enrolid then do;
    * 12+ years old and enrolled 5/6 and 11/12 months *;
    if age_years >= 12 & enrmon15 >= 5 & enrmon16 >= 11 & enrmon17 >= 11;
	output;
  end;
run;

* Note: no race in Am Ex data *;
proc freq data=amex.elig_trim;
  title 'Eligibility Trimmed';
  tables age_years sex state_cd enrmon15 enrmon16 enrmon17/ missprint;
run;

** Claims **;
** Limit to members in Elig dataset **;
** AP 2018-09-25:  Added logic to bring gender & age to claims from the elig trim file;
proc sql;
  create table amex.claim_trim as
  select b.*,
		 a.age_years as age,
		 a.sex,
		 a.zip_cd 
  from amex.elig_trim as a inner join amex.claims as b
  on a.enrolid = b.enrolid;
quit;

* Check procedure: check amex.claim_trim to see whether the variables are initialized *;
proc contents data=amex.claim_trim;
run;

* Separate claims by year like Marketscan *;
%macro claims(yr);
  data amex.claims&yr;
    set amex.claim_trim (where = (year(svcdate) = &yr));
    * Initialize *;
    opioid         = 0;	  naloxone       = 0;
    buprenorphine  = 0;	  methadone      = 0;
    short_acting   = 0;	  long_acting    = 0;
    fentanyl       = 0;	  benzodiazepine = 0;
    naltrexone     = 0;	  antidepressant = 0;
    antipsychotic  = 0;	  op_lax         = 0; 
    nat_opioid     = 0;	  semi_opioid    = 0;
    syn_opioid     = 0;	  barbiturate    = 0;
    good_pot       = 0;	  bad_pot        = 0;
    muscle         = 0;	  gt7d           = 0;
    le7d           = 0;	  bup_meth_nalt  = 0;
    morphine       = 0;
    sud         = 0;		  oud          = 0;
    nas         = 0;		  nas_mom      = 0;
    mh          = 0;		  oudr         = 0;
    adv         = 0;		  treat        = 0;
    treat_rx    = 0;		  cancer       = 0;
    hospice     = 0;		  od           = 0;
    morphine_px = 0;	  	  death        = 0;
    mal_neo     = 0;		  oth_neo      = 0;
    hx_neo      = 0;	      pcp          = 0;   
    ed          = 0;
    * Set drug flags *;
    if daysupp > 0 then do;
	  if put(generid,antidep_generid.      ) = 'antidep_generid'       then antidepressant = 1;
	  if put(generid,antipsy_generid.      ) = 'antipsy_generid'       then antipsychotic  = 1;
	  if put(generid,benzo_generid.        ) = 'benzo_generid'         then benzodiazepine = 1;
	  if put(generid,op_lax_generid.       ) = 'op_lax_generid'        then op_lax         = 1;
      if put(generid,nat_opioid_generid.   ) = 'nat_opioid_generid'    then nat_opioid     = 1;
	  if put(generid,semi_opioid_generid.  ) = 'semi_opioid_generid'   then semi_opioid    = 1;
	  if put(generid,syn_opioid_generid.   ) = 'syn_opioid_generid'    then syn_opioid     = 1;
	  if nat_opioid | semi_opioid | syn_opioid                         then opioid         = 1;
	  if put(generid,barb_generid.         ) = 'barb_generid'          then barbiturate    = 1;
	  if put(generid,good_pot_generid.     ) = 'good_pot_generid'      then good_pot       = 1;
	  if put(generid,bad_pot_generid.      ) = 'bad_pot_generid'       then bad_pot        = 1;
	  if put(generid,nalox_generid.        ) = 'nalox_generid'         then naloxone       = 1;
      if put(generid,bupren_generid.       ) = 'bupren_generid'        then buprenorphine  = 1;
	  if put(generid,meth_generid.         )    = 'meth_generid'       then methadone      = 1;
	  if put(generid,long_acting_generid.  ) = 'long_acting_generid'   then long_acting    = 1;
	  if opioid = 1 and long_acting = 0                                then short_acting   = 1;
	  if put(generid,fent_generid.         ) = 'fent_generid'          then fentanyl       = 1;
	  if put(generid,naltrex_generid.      ) = 'naltrex_generid'       then naltrexone     = 1;
	  if put(generid,muscle_generid.       ) = 'muscle_generid'        then muscle         = 1;
	  if put(generid,bup_meth_nalt_generid.) = 'bup_meth_nalt_generid' then bup_meth_nalt  = 1;
      if put(generid,morphine_generid.     ) = 'morphine_generid'      then morphine       = 1;
    end;
         if      daysupp > 7 then gt7d = 1;
    else if 1 <= daysupp <=7 then le7d = 1;
    * Diagnosis Array *;
    array diag{10} $ dx1-dx10;
    if dxver = '' then dxver = '9';
    * Set dx flags *;
    do i = 1 to 10;
      * ICD 9 *;
	  if dxver = '0' then do;
	    if diag{i} in &sud9     then sud      = 1;
	    if diag{i} in &oud9     then oud      = 1;
	    if diag{i} in &nas9     then nas      = 1;
	    if diag{i} in &nas_mom9 then nas_mom  = 1;
	    if put(diag{i},$MH_DX_ICD9CM.)        = 'MH_Dx_ICD9CM'        then mh      = 1;
	    if put(diag{i},$MAL_NEO_ICD9CM.)      = 'Mal_Neo_ICD9CM'      then mal_neo = 1;
        if put(diag{i},$OTH_NEO_ICD9CM.)      = 'Oth_Neo_ICD9CM'      then oth_neo = 1;
        if put(diag{i},$HX_MALIG_NEO_ICD9CM.) = 'Hx_Malig_Neo_ICD9CM' then hx_neo  = 1;
        if diag{i} in &oudr9 then oudr    = 1;
	    if diag{i} in &adv9  then adv     = 1;
	    if diag{i} in &od9   then od      = 1;
	  end;
	  * ICD 10 *;
	  else if dxver = '1' then do;
	    if diag{i} in &sud10     then sud      = 1;
	    if diag{i} in &oud10     then oud      = 1;
	    if diag{i} in &nas10     then nas      = 1;
	    if diag{i} in &nas_mom10 then nas_mom  = 1;
	    if put(diag{i},$MH_DX_ICD10CM.)        = 'MH_Dx_ICD10CM'        then mh      = 1;
	    if put(diag{i},$MAL_NEO_ICD10CM.)      = 'Mal_Neo_ICD10CM'      then mal_neo = 1;
        if put(diag{i},$OTH_NEO_ICD10CM.)      = 'Oth_Neo_ICD10CM'      then oth_neo = 1;
        if put(diag{i},$HX_MALIG_NEO_ICD10CM.) = 'Hx_Malig_Neo_ICD10CM' then hx_neo  = 1;
	    if diag{i} in &oudr10 then oudr    = 1;
	    if diag{i} in &adv10  then adv     = 1;
	    if diag{i} in &od10   then od      = 1;
	  end;
    end;
    if mal_neo | oth_neo | hx_neo then cancer = 1;
    * Hospice_Morphine *;
    if proc_system_cd in ('1','7') then do;
           if proc1 in &excl_hospice_c then hospice  = 1;
	  else if proc1 in &morph          then morphine_px = 1;
	  else if proc1 in &trt_rx then    treat_rx      = 1;
    end;
    else do;
      if proc1 in &trt_px then treat    = 1;
    end;
    if revcode in &excl_hospice_r then hospice = 1;
    else if put(revcode,$ED_UBREV.) = 'ED_UBREV' then ed      = 1;
    if stdprov in (200, 202, 204, 206, 240, 245, 400, 410, 825, 845) then pcp = 1; 
    if dstatus = '20' then death = 1;
  run;
%mend claims;
%claims(2015);
%claims(2016);
%claims(2017);

* QA *;
proc freq data=amex.claims2016;
  title 'American Express: Claims 2016';
  tables opioid naloxone buprenorphine methadone short_acting long_acting fentanyl benzodiazepine naltrexone antidepressant 
      antipsychotic op_lax nat_opioid syn_opioid semi_opioid muscle bup_meth_nalt morphine
      opioid * gt7d 
      opioid * le7d 
      dxcat mdc sud oud oudr adv od morphine_px treat treat_rx nas mh cancer hospice death mal_neo oth_neo 
      hx_neo nas nas_mom pcp ed/ missprint;
run;



* Summarize by member *;
* Assumes sorted by svcdate, so age will be age at last Rx *;
%macro by_mbr(yr);

	* Sort the data as prep ;
	proc sort data = amex.claims&yr.;
	by enrolid;
	run;  	


  data amex.claims_&yr._1 (keep = enrolid age sex zip_cd opioid1 naloxone1 buprenorphine1 methadone1 short_acting1 long_acting1
      fentanyl1 benzodiazepine1 naltrexone1 antidepressant1 antipsychotic1 op_lax1 nat_opioid1 syn_opioid1 semi_opioid1
      op_benz op_dep op_psy op_lax opioid_days muscle1 good_pot1 bad_pot1 op_lax_c barbiturate1 muscle1 bup_meth_nalt1 morphine1 trinity
     sud1 oud1 oudr1 adv1 od1 hospice1 morphine_px1 treat1 treat_rx1 death1 cancer1 mh1 nas1 nas_mom1 mdc20 mdc21 mdc19 
      pcp1 ed1 ip1);
    set amex.claims&yr.;
    by enrolid;
    * set flags by member *;
    retain opioid1 naloxone1 buprenorphine1 methadone1 short_acting1 long_acting1 fentanyl1 benzodiazepine1 naltrexone1 
      antidepressant1 antipsychotic1 op_lax1 nat_opioid1 syn_opioid1 semi_opioid1 op_benz op_dep op_psy op_lax_c opioid_days 
      bad_pot1 good_pot1 barbiturate1 muscle1 bup_meth_nalt1 morphine1 trinity 
      sud1 oud1 oudr1 adv1 od1 morphine_px1 treat1 treat_rx1 hospice1 death1 cancer1 mh1 nas1 nas_mom1 mdc20 mdc19 mdc21 pcp1 ed1 ip10;
    if first.enrolid then do;
      opioid1         = 0;	      naloxone1       = 0;
      buprenorphine1  = 0;	      methadone1      = 0;
      short_acting1   = 0;	      long_acting1    = 0;
      fentanyl1       = 0;	      benzodiazepine1 = 0;
      naltrexone1     = 0;	      antidepressant1 = 0;
      antipsychotic1  = 0;	      op_lax1         = 0; 
      nat_opioid1     = 0;	      syn_opioid1     = 0;
      semi_opioid1    = 0;	      op_benz		  = 0;
      op_dep		  = 0;		  op_psy		  = 0;
	  op_lax_c   	  = 0;		  opioid_days     = 0;
	  bad_pot1        = 0;		  barbiturate1    = 0;
	  good_pot1       = 0;		  muscle1         = 0;
	  bup_meth_nalt1  = 0;	      morphine1       = 0;
	  trinity         = 0;
	  sud1         = 0;		oud1        = 0;
      oudr1        = 0;	    adv1        = 0;
      od1          = 0;	    hospice1    = 0;
	  morphine_px1 = 0;		treat1      = 0;
	  treat_rx1    = 0;		death1      = 0;
	  cancer1      = 0;		mh1         = 0;
	  nas1         = 0;		nas_mom1    = 0;
	  mdc20        = 0;	    mdc19       = 0;
      mdc21        = 0;		pcp1        = 0;
	  ed1          = 0;		ip1         = 0;
    end;
    * Count number of Rx per member *;
    if opioid         = 1 then do;
      opioid1         = 1;
      opioid_days = opioid_days + daysupp;
    end;
    if naloxone       = 1 then naloxone1       = 1;
    if buprenorphine  = 1 then buprenorphine1  = 1;
    if methadone      = 1 then methadone1      = 1;
    if short_acting   = 1 then short_acting1   = 1;
    if long_acting    = 1 then long_acting1    = 1; 
    if fentanyl       = 1 then fentanyl1       = 1;
    if benzodiazepine = 1 then benzodiazepine1 = 1;
    if naltrexone     = 1 then naltrexone1     = 1;
    if antidepressant = 1 then antidepressant1 = 1;
    if antipsychotic  = 1 then antipsychotic1  = 1;
    if op_lax         = 1 then op_lax1         = 1;
    if nat_opioid     = 1 then nat_opioid1     = 1;
    if syn_opioid     = 1 then syn_opioid1     = 1;
    if semi_opioid    = 1 then semi_opioid1    = 1;
    if bad_pot        = 1 then bad_pot1        = 1;
    if good_pot       = 1 then good_pot1       = 1;
    if barbiturate    = 1 then barbiturate1    = 1;
    if muscle         = 1 then muscle1         = 1;
    if bup_meth_nalt  = 1 then bup_meth_nalt1  = 1;
    if morphine       = 1 then morphine1       = 1;
    if sud      then sud1      = 1;
    if oud      then oud1      = 1;
    if oudr     then oudr1     = 1;
    if adv      then adv1      = 1;
    if od       then od1       = 1;
    if hospice  then hospice1  = 1;
    if morphine_px then morphine_px1 = 1;
    if treat    then treat1    = 1;
    if treat_rx then treat_rx1 = 1;
    if death    then death1    = 1;
    if cancer   then cancer1   = 1;
    if mh       then mh1       = 1;
    if nas      then nas1      = 1;
    if nas_mom  then nas_mom1  = 1;
    if mdc = '20'   then mdc20 = 1;
    if mdc = '19'   then mdc19 = 1;
    if mdc = '21'   then mdc21 = 1;
    if pcp = 1      then pcp1  = 1;
    if ed  = 1      then ed1   = 1;
    if ip_op = 'IP' then ip1   = 1;;
    if last.enrolid then do;
      if opioid1 > 0 then do; 
        if benzodiazepine1 > 0 then do;
          op_benz  = 1;
	      if muscle1 > 0 then trinity = 1;
	    end;
	    if antidepressant1 > 0 then op_dep   = 1;
	    if antipsychotic1  > 0 then op_psy   = 1;
	    if op_lax1         > 0 then op_lax_c = 1;
      end;
      output;
    end;
  run;
%mend by_mbr;
%by_mbr(2015);
%by_mbr(2016);
%by_mbr(2017);

* QA *;
proc freq data=amex.claims_2016_1;
  tables nat_opioid1  * semi_opioid1 * syn_opioid1
         long_acting1  * short_acting1
    age sex opioid1 naloxone1 buprenorphine1 methadone1 short_acting1 long_acting1 fentanyl1 benzodiazepine1 
    naltrexone1 antidepressant1 antipsychotic1 op_lax1 nat_opioid1 syn_opioid1 semi_opioid1 op_benz op_dep op_psy 
    op_lax_c good_pot1 bad_pot1 barbiturate1 muscle1 bup_meth_nalt1 morphine1 trinity 
    sud1 oud1 oudr1 adv1 od1 hospice1 morphine_px1 treat1 treat_rx1 death1 cancer1 mh1 nas1 nas_mom1 pcp1 ed1 ip1 
	oud1  * cancer1
	oud1  * mh1
    oud1  * sud1 
	oud1  * oudr1 
	oud1  * adv1 
	oud1  * od1 
	oud1  * morphine_px1
	oud1  * treat1
	oud1  * treat_rx1
	oud1  * nas_mom1
	oud1  * hospice1
	oudr1 * treat1
	oudr1 * treat_rx1
	od1   * mh1
	od1   * treat1
	od1   * treat_rx1
	od1   * morphine_px1
	od1   * death1
	od1   * nas_mom1
	mdc20
	mdc19 
	mdc21
    oud1 * mdc20
    od1  * mdc21
    mh1  * mdc19 / missprint; 
run;
proc freq data=amex.claims_2016_1; 
  where opioid1 > 0; 
  tables opioid_days age sex / missprint; 
run;

** claims **;
* How many members have claims? *;
proc sort data=amex.claims out = clm_mbrs (keep = enrolid) nodupkey; by enrolid; run;

* Admissions - only place to get ICD-10 procedure code - but this is only for opioid treatment px and not using now *;

** Export .csv files **;
%macro exp(dset);
  proc export data=amex.&dset
    outfile = "&output_dir.&dset..csv"
    dbms = dlm replace;
    delimiter = ',';
    putnames = yes;
  run;
%mend exp;

* All years *;
%exp(elig_trim);
%exp(claims2015);
%exp(claims2016);
%exp(claims2017);
%exp(claims_2015_1);
%exp(claims_2016_1);
%exp(claims_2017_1);

** Find first opioid rx in 2016 **;
data rx_first (drop = gt7d le7d semi_opioid syn_opioid nat_opioid);
  set amex.claims2016 (keep = enrolid generid svcdate opioid gt7d le7d semi_opioid syn_opioid nat_opioid);
  if opioid = 1;
  nat_gt7d = 0;
  syn_gt7d = 0;
  nat_le7d = 0;
  syn_le7d = 0;
  if gt7d then do;
    if nat_opioid = 1 or semi_opioid = 1 then nat_gt7d = 1;
    if syn_opioid = 1                    then syn_gt7d = 1;
  end;
  else if le7d = 1 then do;
    if nat_opioid = 1 or semi_opioid = 1 then nat_le7d = 1;
    if syn_opioid = 1                    then syn_le7d = 1;
  end;
run;
proc freq data=rx_first; tables nat_gt7d syn_gt7d nat_le7d syn_le7d / missprint; run;
proc sort data=rx_first; by enrolid svcdate; run;
data rx_first;
  set rx_first (drop = opioid);
  by enrolid svcdate;
  if first.enrolid;
run;
** Check prior opioid rx dates in 2015 **;
data rx_last(keep = enrolid svcdate);
  set amex.claims2015 (where = (opioid = 1));
run;
proc sort data=rx_last; by enrolid svcdate; run;
data rx_last;
  set rx_last;
  by enrolid svcdate;
  if last.enrolid;
run;
proc sql;
  create table amex.new_users2016 as
  select a.*, b.svcdate as prior_rx
  from rx_first as a left join rx_last as b
  on a.enrolid = b.enrolid;
quit;
data amex.new_users2016;
  set amex.new_users2016;
  lag = svcdate - prior_rx;
run;
proc print data=amex.new_users2016 (obs = 5); title "New opioid users 2016"; run;
proc means data=amex.new_users2016; title "Opioid lags 2016"; var lag; run; 
  
* Use 6 month (>180 days) threshold *;
data amex.new_users2016 (keep = enrolid svcdate nat_gt7d syn_gt7d nat_le7d syn_le7d);
  set amex.new_users2016 (where = (lag = . or lag > 180));
run; 

** Remove cancer & hospice (anytime) - 6 month clean for Rx **;
data amex.new_users2016;
  merge amex.new_users2016 (in=nin)
        amex.claims_2017_1 (in=xinp1 keep = enrolid cancer1 hospice1 rename = (cancer1 = cancerp1 hospice1 = hospicep1))
        amex.claims_2016_1 (in=xin0  keep = enrolid cancer1 hospice1)
        amex.claims_2015_1 (in=xinm1 keep = enrolid cancer1 hospice1 rename = (cancer1 = cancerm1 hospice1 = hospicem1));
  by enrolid;
  if nin;
  if cancer1  = 1 or cancerp1  = 1 or cancerm1  = 1 then cancer  = 1; else cancer  = 0;
  if hospice1 = 1 or hospicep1 = 1 or hospicem1 = 1 then hospice = 1; else hospice = 0;
  if cancer or hospice then drp = 1; else drp = 0;
run;

* Remove exclusions *;
data amex.new_users2016  (keep = enrolid first_op nat_gt7d syn_gt7d nat_le7d syn_le7d);
  set amex.new_users2016 (where = (cancer = 0 & hospice = 0) rename = (svcdate = first_op));
run;
proc print data=amex.new_users2016 (obs = 5); title "Exclusions Removed 2016"; run;


